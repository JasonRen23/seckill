<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <!--配置整合mybatis过程
    1.配置数据库相关参数-->
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!--2.数据库连接池-->
    <!--<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">-->
    <!--&lt;!&ndash;配置基本的数据库连接&ndash;&gt;-->
    <!--<property name="driverClass" value="${jdbc.driver}"/>-->
    <!--<property name="jdbcUrl" value="${jdbc.url}"/>-->
    <!--<property name="user" value="${jdbc.user}"/>-->
    <!--<property name="password" value="${jdbc.password}"/>-->
    <!--&lt;!&ndash;c3p0私有属性&ndash;&gt;-->
    <!--<property name="maxPoolSize" value="30"/>-->
    <!--<property name="minPoolSize" value="10"/>-->
    <!--&lt;!&ndash;关闭连接后不自动commit&ndash;&gt;-->
    <!--<property name="autoCommitOnClose" value="false"/>-->
    <!--&lt;!&ndash;获取连接超时时间&ndash;&gt;-->
    <!--<property name="checkoutTimeout" value="1000"/>-->
    <!--&lt;!&ndash;当获取连接失败时的重试次数&ndash;&gt;-->
    <!--</bean>-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
        <!--数据库基本信息配置-->
        <property name="url" value="${url}"/>
        <property name="username" value="${username}"/>
        <property name="password" value="${password}"/>
        <property name="driverClassName" value="${driverClassName}"/>
        <property name="filters" value="${filters}"/>
        <!--最大并发连接数-->
        <property name="maxActive" value="${maxActive}"/>
        <!-- 初始化连接数量 -->
        <property name="initialSize" value="${initialSize}"/>
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="${maxWait}"/>
        <!-- 最小空闲连接数 -->
        <property name="minIdle" value="${minIdle}"/>
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}"/>
        <property name="validationQuery" value="${validationQuery}"/>
        <property name="testWhileIdle" value="${testWhileIdle}"/>
        <property name="testOnBorrow" value="${testOnBorrow}"/>
        <property name="testOnReturn" value="${testOnReturn}"/>
        <property name="maxOpenPreparedStatements" value="${maxOpenPreparedStatements}"/>
        <!-- 打开 removeAbandoned 功能 -->
        <property name="removeAbandoned" value="${removeAbandoned}"/>
        <!-- 1800 秒，也就是 30 分钟 -->
        <property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}"/>
        <!-- 关闭 abanded 连接时输出错误日志 -->
        <property name="logAbandoned" value="${logAbandoned}"/>
    </bean>

    <!--配置sqlSessionFactory对象-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--注入数据库连接池-->
        <property name="dataSource" ref="dataSource"/>
        <!--配置mybatis全局配置文件-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!--配置entiry包，也就是实体类包，自动扫描，用于别名配置-->
        <property name="typeAliasesPackage" value="cn.jasonren.seckill.entity"/>
        <!--配置需要扫描mapper.xml文件-->
        <property name="mapperLocations" value="classpath:cn.jasonren.seckill.dao/*.xml"/>
    </bean>

    <!--配置mapper接口包，动态实现mapper接口，注入到Spring容器-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--注入到sqlSessionFactory,请注意不要使用sqlSessionFactoryBean, 否则会出现注入异常-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!--给出要扫描的mapper接口-->
        <property name="basePackage" value="cn.jasonren.seckill.dao"/>
    </bean>

    <!-- 注入redisDao -->
    <bean id="redisDao" class="cn.jasonren.seckill.dao.cache.RedisDao">
        <!-- 构造方法注入值 -->
        <!-- 这里的IP地址是安装了redis的机器IP地址-->
        <!-- 如果redis安装在本地，把IP地址改为本地IP地址 -->
        <constructor-arg index="0" value="127.0.0.1"/>
        <constructor-arg index="1" value="6379"/>
    </bean>
</beans>